<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-15T13:15:31 IST" name="Suite" finished-at="2025-06-15T13:15:45 IST" duration-ms="13919">
    <groups>
    </groups>
    <test started-at="2025-06-15T13:15:31 IST" name="Test" finished-at="2025-06-15T13:15:45 IST" duration-ms="13919">
      <class name="Testcases.TC01_Verifylogin">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:Testcases.TC01_Verifylogin@2034b64c]" started-at="2025-06-15T13:15:32 IST" name="setUp" finished-at="2025-06-15T13:15:34 IST" duration-ms="2492" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC01_Verifylogin.TC01_Verifylogin(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC01_Verifylogin(java.lang.String,java.lang.String)[pri:0, instance:Testcases.TC01_Verifylogin@2034b64c]" started-at="2025-06-15T13:15:34 IST" name="TC01_Verifylogin" data-provider="getexceldata" finished-at="2025-06-15T13:15:37 IST" duration-ms="2237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01_Verifylogin -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:Testcases.TC01_Verifylogin@2034b64c]" started-at="2025-06-15T13:15:37 IST" name="tearDown" finished-at="2025-06-15T13:15:37 IST" duration-ms="254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC01_Verifylogin.TC01_Verifylogin(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:Testcases.TC01_Verifylogin@2034b64c]" started-at="2025-06-15T13:15:37 IST" name="setUp" finished-at="2025-06-15T13:15:38 IST" duration-ms="1479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC01_Verifylogin.TC01_Verifylogin(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC01_Verifylogin(java.lang.String,java.lang.String)[pri:0, instance:Testcases.TC01_Verifylogin@2034b64c]" started-at="2025-06-15T13:15:38 IST" name="TC01_Verifylogin" data-provider="getexceldata" finished-at="2025-06-15T13:15:40 IST" duration-ms="1237" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[locked_out_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at Testcases.TC01_Verifylogin.TC01_Verifylogin(TC01_Verifylogin.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01_Verifylogin -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:Testcases.TC01_Verifylogin@2034b64c]" started-at="2025-06-15T13:15:40 IST" name="tearDown" finished-at="2025-06-15T13:15:40 IST" duration-ms="186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC01_Verifylogin.TC01_Verifylogin(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownExtentReport()[pri:0, instance:Testcases.TC01_Verifylogin@2034b64c]" started-at="2025-06-15T13:15:45 IST" name="tearDownExtentReport" finished-at="2025-06-15T13:15:45 IST" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownExtentReport -->
      </class> <!-- Testcases.TC01_Verifylogin -->
      <class name="Testcases.TC02_Add_Products">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:Testcases.TC02_Add_Products@53045c6c]" started-at="2025-06-15T13:15:40 IST" name="setUp" finished-at="2025-06-15T13:15:41 IST" duration-ms="1576" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC02_Add_Products.TC02_Add_Products(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC02_Add_Products(java.lang.String,java.lang.String)[pri:0, instance:Testcases.TC02_Add_Products@53045c6c]" started-at="2025-06-15T13:15:41 IST" name="TC02_Add_Products" data-provider="getexceldata" finished-at="2025-06-15T13:15:45 IST" duration-ms="3180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC02_Add_Products -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:Testcases.TC02_Add_Products@53045c6c]" started-at="2025-06-15T13:15:45 IST" name="tearDown" finished-at="2025-06-15T13:15:45 IST" duration-ms="189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Testcases.TC02_Add_Products.TC02_Add_Products(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Testcases.TC02_Add_Products -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
